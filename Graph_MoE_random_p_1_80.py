import numpy as np
import matplotlib.pyplot as plt
x = range(1,81)
mean_margins_Data_MoE_random_p_1_80 = [1.0, 0.9700000000000001, 0.836, 0.7615, 0.7525000000000001, 0.651, 0.5805, 0.5529999999999999, 0.4885, 0.4965, 0.45899999999999996, 0.44000000000000006, 0.491, 0.41450000000000004, 0.3745, 0.3625, 0.35, 0.3275, 0.3505, 0.324, 0.30749999999999994, 0.319, 0.3035, 0.2779999999999999, 0.269, 0.2715, 0.2845, 0.2465, 0.227, 0.21449999999999997, 0.23049999999999998, 0.27649999999999997, 0.22549999999999998, 0.2405, 0.21149999999999997, 0.22900000000000004, 0.199, 0.198, 0.154, 0.1905, 0.20249999999999999, 0.171, 0.2205, 0.19799999999999998, 0.182, 0.16749999999999998, 0.16749999999999998, 0.165, 0.1825, 0.13999999999999999, 0.16, 0.1405, 0.1645, 0.142, 0.1615, 0.137, 0.13999999999999999, 0.13349999999999998, 0.138, 0.12750000000000003, 0.1035, 0.1255, 0.1275, 0.12250000000000003, 0.12150000000000002, 0.1125, 0.10300000000000001, 0.087, 0.09600000000000002, 0.1105, 0.1035, 0.087, 0.08850000000000001, 0.0905, 0.096, 0.0915, 0.08900000000000002, 0.0885, 0.08750000000000002, 0.076]

fit = np.polyfit(np.log(x),mean_margins_Data_MoE_random_p_1_80, 1)
print(fit)
y_predicted = []
for i in range(1, 81):
    y_predicted.append(fit[1] + np.log(i) * fit[0])

plt.plot(x, mean_margins_Data_MoE_random_p_1_80, marker='o', linestyle='-', color='b')
plt.plot(x, y_predicted, color='c')
plt.xlabel('Sample size')
plt.ylabel('Mean Margins of Error')
plt.title('Mean Margins of Error for y_i,N simulated through random p x n')
plt.grid(True)
plt.show()